프로그램의 개요 : SIC/XE 머신 구현을 위한 전처리



프로그램의 컴파일 방법 및 실행 방법:

1. 압축을 해제한다.
2. "make" 명령어를 입력한다. ($ make)
3. "./20151602.out" 명령어를 입력한다. ($ ./20151602.out)
4. 제대로 작동이 되었다면, 실습을 진행한다.
5. 실습이 다 끝난 뒤에는 "make clean" 명렁어를 입력하여 부수 파일을 제거한다. ($ make clean)



입력받을 수 있는 명령어:
(실제 argument의 수가 괄호 안의 "유효 argument 수"를 넘거나 부족한 경우,
 혹은 argument의 범위가 정해진 범위를 벗어나는 경우에는 에러 처리를 함)

1. h[elp] - 유효한 명령어들과, 그들의 양식을 보여준다.
	(유효 argument 수 : 0)
2. d[ir] - 현재 디렉터리 내에 있는 파일들을 출력한다.
	(유효 argument 수 : 0)
3. q[uit] - sicsim을 종료한다.
	(유효 argument 수 : 0)
4. hi[story] - 현재까지 사용한 명령어들을 순서대로 번호와 함께 보여준다.
		이 때, argument의 수나 내용, 기능의 작동 도중 문제가 발생했을 경우,
		이는 부적절한 명령어로 취급하여, history에는 포함되지 않게 된다.
	(유효 argument 수 : 0)
5. du[mp] [start, end] - 할당되어 있는 메모리의 내용을 정해진 형식으로 출력한다.
			 이 때, start와 end의 범위가 각각 메모리 할당 영역을
			 벗어날 경우, 이는 부적절한 명령어로 취급된다.
	(유효 argument 수 : 0, 1, 2)
6. e[dit] address, value - 메모리의 address번지의 값을 value에 지정된 값으로 변경한다.
			   이 때, address와 value가 각각 자신들의 정해진 범위를 
			   벗어나게 될 경우, 이는 부적절한 명령어로 취급된다.
	(유효 argument 수 : 2)
7. f[ill] start, end, value - 메모리의 start번지부터 end번지까지의 값을 value에
			  지정된 값으로 변경한다.
			  다른 사항은 5, 6번과 같다.
	(유효 argument 수 : 3)
8. reset - 메모리 전체를 전부 0으로 변경시킨다.
	(유효 argument 수 : 0)
9. opcode mnemonic - 명령어를 입력하면 해당하는 opcode를 출력한다.
		 만약 존재하지 않는 명령어가 입력된다면, 이는 부적절한 명령어로 취급된다.
	(유효 argument 수 : 1)
10. opcodelist - opcode Hash Table의 내용을 정해진 혀식으로 출력한다.
	(유효 argument 수 : 0)
